#!/bin/bash
#
# Given the serial device node and a list of short zone names, send a
# set of update packets to the clock.
#
# The short zone names (and therefore the zone_names map file) are used
# because the clock has a limited storage for the name string.
#
# Can be used from cron:
# 0 */4 * * * $DIR/setclock /dev/ttyUSB0 Melbourne London
#

PORT="$1"
if [ -z "$PORT" ]; then
    echo need port
    exit 1
fi
shift

ZONE_NAMES=$(dirname $0 )/zone_names
if [ ! -e $ZONE_NAMES ]; then
    echo zone mapping file $ZONE_NAMES does not exist
    exit 1
fi

stty 9600 <$PORT

jpnevulator --read --ascii --byte-count --timing-print --tty=$PORT &
READ=$!

echo -e "`date +%s` \x02t\x04 " >>$PORT # get old time
sleep 0.1
echo -e "\x02T`date +%s`\x04"   >>$PORT # set time
sleep 0.1

while [ -n "$1" ]; do
    # truncate the short name as the clock only stores 8 chars
    ZONE_SHORT=$(echo "$1" | cut -c1-8)
    shift

    if [ -z "$ZONE_SHORT" ]; then
        echo need zone short name
        exit 1
    fi

    ZONE_OLSEN=$(egrep ^$ZONE_SHORT $ZONE_NAMES | head -1 | awk -- '{print $2}')
    if [ -z "$ZONE_OLSEN" ]; then
        echo invalid short name - does zone_names need updating?
        exit 1
    fi

    echo
    echo $ZONE_SHORT $ZONE_OLSEN

    OFFSET=`perl -e "use DateTime; print DateTime->now(time_zone=>'$ZONE_OLSEN')->offset();"`
    echo -e "\x02O${ZONE_SHORT},$OFFSET\x04"   >>$PORT # set offset

    sleep 0.1
    echo
done

kill $READ

